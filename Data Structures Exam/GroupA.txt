Задача 1

По подадени два едносвързани линейни списъка, конструирайте техните обединение и сечение.
Вашите функции трябва да приемат два аргумента от тип Node*, където Node е познатата ни структура "кутийка" с данни и указател към следващ елемент.
Можете да се възползвате от вече създадените конструктори, а можете и да добавите свои.

struct Node {
	int data;
	Node* next;

	Node(): next(nullptr) {}
	Node(data): data(data), next(nullptr) {}
}

Бонус точки за използване на хитринки.


Задача 2

Два елемента в двоично наредено дърво са разменени. Напишете функция, която намира грешката и я поправя.
Aргумент трябва да е коренът на дървото - аргумент от тип Node. Позволено е използването на собствена имплементация на Node, както и допълването на дадената.

struct Node {
	int data;
	Node* left;
	Node* right;
}



Задача 3

Сортирайте стек посредством рекурсия. 
Функцията ви трябва да приема аргумент от тип std::stack<int> и да отпечатва сортирания стек.


Задача 4

Напишете функция, която отпечатва десетте най-често срещани думи във файла, подаден като аргумент. 
Думите започват и завършват с главна или малка латинска буква, отделени са чрез интервал, нов ред, табулация и пунктуационни знаци.